import 'dart:io';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:gallery_picker/gallery_picker.dart';
import 'package:tratour/globalVar.dart';
import 'package:tratour/database/updateUser.dart';
import 'package:tratour/main.dart';
import 'package:tratour/pages/homePage.dart';
import 'package:tratour/pages/profilePage.dart';
import 'package:tratour/widget_tree.dart';

class EditProfilePage extends StatefulWidget {
  const EditProfilePage({Key? key}) : super(key: key);
  

  @override
  _EditProfilePageState createState() => _EditProfilePageState();
}

class _EditProfilePageState extends State<EditProfilePage> {
  final UpdateUser _updateUser = UpdateUser();
  GlobalVar globalVar = GlobalVar.instance;

  final TextEditingController _usernameUpdateController =
      TextEditingController();
  final TextEditingController _phoneUpdateController = TextEditingController();
  final TextEditingController _addressUpdateController =
      TextEditingController();
  final TextEditingController _postalUpdateCodeController =
      TextEditingController();
  final String profileImageUpdateUrl = '';

  File? _selectedImage;

  @override
  Widget build(BuildContext context) {
    GlobalVar globalVar = GlobalVar.instance;

    Map<String, dynamic> userData = globalVar.userLoginData ?? {};
    _usernameUpdateController.text = userData['username'] ?? '';
    _phoneUpdateController.text = userData['phone'] ?? '';
    _addressUpdateController.text = userData['address'] ?? '';
    _postalUpdateCodeController.text = userData['postal_code'] ?? '';

    return Scaffold(
      appBar: AppBar(
        backgroundColor: GlobalVar.mainColor,
        leading: Padding(
          padding: const EdgeInsets.only(left: 20),
          child: IconButton(
            onPressed: () {
              Navigator.of(context).pop();
            },
            icon: const Icon(
              Icons.arrow_back_ios,
              size: 22,
            ),
          ),
        ),
        title: const Text(
          "Edit Profil",
          style: TextStyle(
              fontSize: 20,
              fontWeight: FontWeight.w700,
              color: GlobalVar.baseColor),
        ),
      ),
      body: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Center(
              child: Container(
                padding: EdgeInsets.all(20),
                child: Text(
                  "Lengkapi data anda untuk \n melakukan pemesanan",
                  textAlign: TextAlign.center,
                  style: TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ),
            Center(
              child: Stack(
                children: [
                  CircleAvatar(
                    radius: 42,
                    backgroundImage: _selectedImage != null
                        ? FileImage(_selectedImage!) as ImageProvider<
                            Object> // Explicitly cast FileImage to ImageProvider<Object>
                        : NetworkImage(userData['profile_image'] ??
                            'https://firebasestorage.googleapis.com/v0/b/tra-tour.appspot.com/o/default_profile_image.png?alt=media&token=83bb623d-473f-4c5e-93c3-ecc3fc5f915b'),
                  ),
                  Positioned(
                    bottom: -5,
                    right: -10,
                    child: ElevatedButton(
                      onPressed: () async {
                        _selectedImage = await getImageFromGallery(context);
                        print('selectedImage $_selectedImage');
                        setState(
                            () {}); // Menyegarkan tampilan untuk menampilkan gambar yang baru dipilih
                      },
                      style: ElevatedButton.styleFrom(
                        padding: EdgeInsets.zero,
                        backgroundColor: Colors.transparent,
                        shape: CircleBorder(),
                        shadowColor: Colors.transparent,
                      ),
                      child: const Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: Icon(
                          Icons.camera_alt_rounded,
                          color: Colors.white,
                          size: 24,
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
            Form(
              child: Padding(
                padding: EdgeInsets.all(20),
                child: Column(
                  children: [
                    TextFormField(
                      keyboardType: TextInputType.name,
                      inputFormatters: [
                        // Corrected regex to allow only letters and spaces:
                        FilteringTextInputFormatter.allow(
                            RegExp(r'^[a-zA-Z\s]*$')),
                        LengthLimitingTextInputFormatter(40),
                      ],
                      controller: _usernameUpdateController,
                      decoration: const InputDecoration(
                        contentPadding: EdgeInsets.all(10),
                        border: OutlineInputBorder(),
                        labelText: 'Nama Pengguna',
                      ),
                    ),
                    SizedBox(height: 20),
                    TextFormField(
                      keyboardType:
                          TextInputType.phone, // Set keyboard type to phone
                      inputFormatters: [
                        FilteringTextInputFormatter
                            .digitsOnly, // Hanya izinkan digit
                        LengthLimitingTextInputFormatter(13), // Batasan panjang
                      ],
                      controller: _phoneUpdateController,
                      decoration: const InputDecoration(
                        contentPadding: EdgeInsets.all(10),
                        border: OutlineInputBorder(),
                        labelText: 'Nomor Telepon (Cth: 081234567890) ',
                      ),
                    ),
                    SizedBox(height: 20),
                    TextFormField(
                      controller: _addressUpdateController,
                      decoration: const InputDecoration(
                        contentPadding: EdgeInsets.all(10),
                        border: OutlineInputBorder(),
                        labelText: 'Alamat',
                      ),
                    ),
                    SizedBox(height: 20),
                    TextFormField(
                      keyboardType:
                          TextInputType.phone, // Set keyboard type to phone
                      inputFormatters: [
                        FilteringTextInputFormatter
                            .digitsOnly, // Hanya izinkan digit
                        LengthLimitingTextInputFormatter(5), // Batasan panjang
                      ],
                      controller: _postalUpdateCodeController,
                      decoration: const InputDecoration(
                        contentPadding: EdgeInsets.all(10),
                        border: OutlineInputBorder(),
                        labelText: 'Kode Pos',
                      ),
                    ),
                    SizedBox(height: 10),
                    ElevatedButton(
                      onPressed: () {
                        _confirmEdit(context);
                      },
                      style: ElevatedButton.styleFrom(
                        foregroundColor: Colors.white,
                        backgroundColor: GlobalVar.mainColor,
                      ),
                      child: Text('Simpan Perubahan'),
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  void _confirmEdit(BuildContext context) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Konfirmasi Perubahan Profil'),
          content: Text('Apakah Anda yakin ingin mengubah data profil anda?'),
          actions: <Widget>[
            TextButton(
              onPressed: () {
                Navigator.of(context).pop();
              },
              child: Text('Batal'),
            ),
            ElevatedButton(
              onPressed: () async {
                // Memanggil updateUserToDatabase dari objek UpdateUser
                Navigator.of(context).pop();


              _updateUserData();



              /*   try {
                  /*   await _updateUser.updateUserToDatabase(
                      globalVar.userLoginData['email'],
                      _usernameUpdateController.text,
                      _phoneUpdateController.text,
                      _addressUpdateController.text,
                      _postalUpdateCodeController.text,
                      profileImageUpdateUrl,
                    ); */

                
                } catch (e) {
                  print('Error updating user: $e');
                } */
              },
              child: Text('Ubah'),
            ),
          ],
        );
      },
    );
  }

void _updateUserData() async {
  final GlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();

  // Cek apakah gambar sudah dipilih
  if (_selectedImage != null) {
    bool success = await _updateUser.uploadImageFirebaseStorage(_selectedImage!);
    if (success) {
      // Tampilkan snackbar berhasil
      ScaffoldMessenger.of(navigatorKey.currentContext!).showSnackBar(
        const SnackBar(
          content: Text('Profil berhasil diperbarui'),
          duration: Duration(seconds: 2),
        ),
      );
      print('Upload image successfully');
    } else {
      // Tampilkan snackbar gagal
      ScaffoldMessenger.of(navigatorKey.currentContext!).showSnackBar(
        const SnackBar(
          content: Text('Gagal memperbarui profil'),
          duration: Duration(seconds: 2),
        ),
      );
      print('Failed to upload image');
    }
  } else {
    print('No image selected');
  }
}


  Future<File?> getImageFromGallery(BuildContext context) async {
    try {
      List<MediaFile>? singleMedia =
          await GalleryPicker.pickMedia(context: context, singleMedia: true);
      return singleMedia?.first.getFile();
    } catch (e) {
      print('Error Image Picker: $e');
    }
    return null;
  }
}
